<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="BuildAndTest" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="dir.props" />

  <PropertyGroup>
    <BuildTestTargets>
        InitBaseDotnetCli;
        RestoreTests;
        BuildTests;
        RunTests;
    </BuildTestTargets>
  </PropertyGroup>

  <Target Name="BuildAndTest" DependsOnTargets="$(BuildTestTargets)" />
  
  <!-- We need a version of the Cli that we can plug the host / shared framework into for testing. -->
  <Target Name="InitBaseDotnetCli">
    <PropertyGroup>
      <TestToolsLocalPath Condition="'$(ToolsLocalPath)' == ''">$(TestsOutputDir)Tools</TestToolsLocalPath>
      <BootstrapCommand Condition="'$(OSGroup)' == 'Windows_NT'">powershell -NoProfile -ExecutionPolicy unrestricted -Command "$(MSBuildThisFileDirectory)bootstrap/bootstrap.ps1" -ToolsLocalPath $(TestToolsLocalPath)</BootstrapCommand>
      <BootstrapCommand Condition="'$(OSGroup)' != 'Windows_NT'">$(MSBuildThisFileDirectory)bootstrap/bootstrap.sh --toolsLocalPath $(TestToolsLocalPath)</BootstrapCommand>
    </PropertyGroup>
    <Exec Command="$(BootstrapCommand)" />
  </Target>

  <Target Name="RestoreTests">
    <ItemGroup>
      <RestoreTest Include="$(TestDir)/**/project.json')" />
    </ItemGroup>
   <ItemGroup>
      <DirsToClean Include="$(TestDir)\**\bin" />
      <DirsToClean Include="$(TestDir)\**\obj" />
   </ItemGroup>

    <RemoveDir Directories="$(DirsToClean)" />

    <PropertyGroup>
      <RestoreSourceArg>@(RestoreTestSource->'--fallbacksource %(Identity)', ' ')</RestoreSourceArg>
      <RestoreArgs>--disable-parallel --no-cache --packages "$(PackagesDir.TrimEnd('/\'.ToCharArray()))" $(RestoreSourceArg.Replace('\', '/'))</RestoreArgs>
    </PropertyGroup>

    <Exec Command="$(DotnetToolCommand) restore $(RestoreArgs)"
          WorkingDirectory="%(RestoreTest.RootDir)%(RestoreTest.Directory)" />
  </Target>

  <Target Name="BuildTests">
    <PropertyGroup>
      <BuildArgs>--configuration $(ConfigurationGroup)</BuildArgs>
    </PropertyGroup>

    <Message Text="Building Tests" Importance="High" />
    <Exec Command="$(DotnetToolCommand) build $(BuildArgs)"
          WorkingDirectory="%(TestProjects.Identity)" />
  </Target>

  <Target Name="RunTest"
          Inputs="%(TestProjects.Identity)"
          Outputs="fake">
    <PropertyGroup>
      <TestProject>%(TestProjects.Identity)</TestProject>
      <TestProjectFilename>%(TestProjects.Filename)</TestProjectFilename>
    </PropertyGroup>
    <PropertyGroup>
      <TestArgs>--configuration $(ConfigurationGroup)</TestArgs>
      <IsCrossArch Condition="'$(TargetArchitecture)' == 'arm' or '$(TargetArchitecture)' == 'arm64' or '$(TargetArchitecture)' == 'armel'">true</IsCrossArch>
      <TestResultsXml>$(TestsOutputDir)$(TestProjectFilename)-testResults.xml</TestResultsXml>
    </PropertyGroup>

    <Exec Command="$(DotnetToolCommand) test $(TestArgs) -xml $(TestResultsXml) -notrait category=failing"
          WorkingDirectory="$(TestProject)"
          EnvironmentVariables="NUGET_PACKAGES=$(PackagesDir);TEST_ARTIFACTS=$(TestsOutputDir);TEST_TARGETRID=$(PackageTargetRid)"
          Condition="'$(TestProjectFilename)' != 'HostActivationTests' or '$(IsCrossArch)' != 'true'"
          ContinueOnError="true"
          IgnoreStandardErrorWarningFormat="true"
          IgnoreExitCode="true">
        <Output TaskParameter="ExitCode" PropertyName="_ErrorCode" />
    </Exec>

    <ItemGroup>
      <TestResults Include="$(TestProject)">
        <ResultsXml>$(TestResultsXml)</ResultsXml>
        <ExitCode>$(_ErrorCode)</ExitCode>
      </TestResults>
    </ItemGroup>
    <Message Importance="High" Condition="'$(_ErrorCode)' != '0'" Text="Test run failed with exit code '$(_ErrorCode)', see $(TestResultsXml)" />
  </Target>

  <Target Name="RunTests"
          DependsOnTargets="PrepareTestFolders;RunTest">
    <ItemGroup>
      <FailedTests Include="@(TestResults)" Condition="'%(TestResults.ExitCode)' != '0'">
      </FailedTests>
    </ItemGroup>
    <Message Importance="High" Condition="'@(FailedTests)' != ''" Text="Failed test summary" />
    <Message Importance="High" Condition="'@(FailedTests)' != ''" Text="  %(FailedTests.Identity) failed with exit code %(FailedTests.ExitCode), see %(FailedTests.ResultsXml)" />      
    <Error Condition="'@(FailedTests)' != ''" Text="One or more test runs failed." />
  </Target>

  <Target Name="PrepareTestFolders">
    <ItemGroup>
      <SharedFrameworkPublishFiles Include="$(IntermediateOutputRootPath)sharedFrameworkPublish/**" />
    </ItemGroup>

    <Copy SourceFiles="@(SharedFrameworkPublishFiles)"
          DestinationFiles="@(SharedFrameworkPublishFiles->'$(TestsOutputDir)sharedFrameworkPublish/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>
</Project>