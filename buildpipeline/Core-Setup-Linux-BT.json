{
  "build": [
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git checkout",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "checkout $(SourceVersion)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize tools",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(Build.SourcesDirectory)/init.sh",
        "arguments": "",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize docker",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(DockerHost_ToolsDirectory)/scripts/docker/init-docker.sh",
        "arguments": "$(PB_DockerImageName)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Start detached docker container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "run -d -w $(PB_GitDirectory) -v $(Build.SourcesDirectory):$(PB_GitDirectory) --name $(PB_DockerContainerName) $(PB_DockerImageName) sleep 7200",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build.sh",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "docker",
        "arguments": "exec $(PB_DockerContainerName) $(PB_GitDirectory)/build.sh -OfficialBuildId=$(OfficialBuildId) $(PB_BuildArguments)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Cleanup Docker",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "perl",
        "arguments": "$(DockerHost_ToolsDirectory)/scripts/docker/cleanup-docker.sh",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Copy Publish Artifact: Build Logs",
      "timeoutInMinutes": 0,
      "task": {
        "id": "1d341bb0-2106-458c-8422-d00bcea6512a",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "CopyRoot": "",
        "Contents": "**/*.log",
        "ArtifactName": "Build Logs",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Cleanup VSTS Agent",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(DockerHost_ToolsDirectory)/msbuild.sh",
        "arguments": "cleanupagent.proj /p:AgentDirectory=$(Agent.HomeDirectory) /p:DoClean=$(PB_CleanAgent)",
        "workingFolder": "$(DockerHost_ToolsDirectory)/scripts/vstsagent/",
        "failOnStandardError": "false"
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5bc3cfb7-6b54-4a4b-b5d2-a3905949f8a6"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "4777",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "BuildConfiguration": {
      "value": "Release",
      "allowOverride": true
    },
    "PB_BuildArguments": {
      "value": "--skip-prereqs --configuration $(BuildConfiguration)",
      "allowOverride": true
    },
    "CONNECTION_STRING": {
      "value": "PassedViaPipeBuild"
    },
    "PUBLISH_TO_AZURE_BLOB": {
      "value": "true",
      "allowOverride": true
    },
    "NUGET_FEED_URL": {
      "value": "https://dotnet.myget.org/F/dotnet-core/api/v2/package"
    },
    "NUGET_API_KEY": {
      "value": "PassedViaPipeBuild"
    },
    "GITHUB_PASSWORD": {
      "value": "PassedViaPipeBuild"
    },
    "DOTNET_BUILD_CONTAINER_TAG": {
      "value": "core-setup-$(PB_DockerOS)-$(Build.BuildId)"
    },
    "PB_DockerOS": {
      "value": "debian8",
      "allowOverride": true
    },
    "PB_CleanAgent": {
      "value": "true"
    },
    "DockerHost_ToolsDirectory": {
      "value": "$(Build.SourcesDirectory)/Tools"
    },
    "NUGET_SYMBOLS_FEED_URL": {
      "value": "https://dotnet.myget.org/F/dotnet-core/api/v2/package"
    },
    "PB_DockerImageName": {
      "value": "$(PB_DockerRepository):$(PB_DockerTag)"
    },
    "PB_DockerRepository": {
      "value": "microsoft/dotnet-buildtools-prereqs"
    },
    "PB_DockerContainerName": {
      "value": "coresetup-$(Build.BuildId)"
    },
    "PB_DockerTag": {
      "value": "debian82_prereqs_2"
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)"
    }
  },
  "demands": [
    "Agent.OS -equals linux"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 2,
      "minimumToKeep": 10,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)-$(PB_DockerTag)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 90,
  "jobCancelTimeoutInMinutes": 5,
  "badgeEnabled": true,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "cleanOptions": "0"
    },
    "id": "c19ea379-feb7-4ca5-8f7f-5f2b5095ea62",
    "type": "TfsGit",
    "name": "DotNet-Core-Setup-Trusted",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-Core-Setup-Trusted",
    "defaultBranch": "refs/heads/buildtools",
    "clean": "false",
    "checkoutSubmodules": false
  },
  "quality": "definition",
  "queue": {
    "id": 36,
    "name": "DotNet-Build",
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    }
  },
  "id": 5075,
  "name": "Core-Setup-Linux-BT",
  "path": "\\",
  "type": "build",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097642
  }
}